chsh -s /bin/zsh
sudo mkdir -p /opt/4T && sudo chown -R $(whoami) $_ ;
git clone git@github.com:DCDC-Melo/home.git . ${cm#get home local}

# import private key
curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.dc.gpg.private.key | tee ${tmpFile::=$(mktemp)} ; gpg --import $tmpFile ;
# curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.dc.private.key.gpg | tee ${tmpFile::=$(mktemp)} ; gpg --import $tmpFile ;
# curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.dc.public.key.gpg  | tee ${tmpFile::=$(mktemp)} ; gpg --import $tmpFile ;
# gpg --import private.key
# gpg --pinentry-mode loopback --import private.key ;

# export key
gpg --export-secret-keys --armor C24754849B10AB07 > .dc.gpg.private.key

# start gpg
gpgconf --kill gpg-agent ; systemctl --user stop gpg-agent ; systemctl --user start gpg-agent ;
systemctl --user status gpg-agent
systemctl --user stop   gpg-agent
systemctl --user start  gpg-agent
gpgconf --kill gpg-agent
gpg --list-keys
gpg --list-secret-keys
gpg --list-public-keys

# encrypt
gpg --recipient C24754849B10AB07 --armor --output ${tmpFile::=~/.zshsc.sh}.gpg  --encrypt ${tmpFile} ;

# decrypt
gpg --output ${tmpFile::=.zshenv}  --decrypt ${tmpFile}.gpg ;
gpg --output ${rmFile::=$(mktemp)} --decrypt ${tmpFile::=.zshenv}.gpg ; source ${rmFile} ; rm -i $rmFile

# env
function isgo { if [[ "$#" -gt "0" ]]; then export declare allPara="$@" ; export declare lastPara="$@[-1]" ; echo 'isgo: \033[0;32m'"${allPara}"'\033[0m' ; fi ; unset skipCommand ; vared -p 'Is go on ?: ' -c skipCommand ; export declare skipCommand ; }
isgo zshenv         ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshenv        | tee ${tmpFile::=$(mktemp)} ; source $tmpFile ; rm -i $tmpFile ; mv -i $tmpFile $HOME/.zshenv ;
isgo zshenv.sh      ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshenv.sh.gpg | tee ${gpgFile::=$(mktemp)} ; gpg --output ${rmFile::=$(mktemp)} --decrypt ${gpgFile} ;  source $rmFile ; rm -i $rmFile ; mv -i $rmFile $HOME/.zshenv.sh ;
# function
isgo zshrc          ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshrc         | tee ${tmpFile::=$(mktemp)} ; source $tmpFile ; rm -i $tmpFile ; mv -i $tmpFile $HOME/.zshrc ;
isgo zshfun.sh      ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshfun.sh.gpg | tee ${gpgFile::=$(mktemp)} ; gpg --output ${rmFile::=$(mktemp)} --decrypt ${gpgFile} ;  source $rmFile ; rm -i $rmFile ; mv -i $rmFile $HOME/.zshfun.sh ;
isgo zshsc.sh       ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshsc.sh.gpg  | tee ${gpgFile::=$(mktemp)} ; gpg --output ${rmFile::=$(mktemp)} --decrypt ${gpgFile} ;  source $rmFile ; rm -i $rmFile ; mv -i $rmFile $HOME/.zshsc.sh ;
# command history
isgo fc -R zshhi.sh ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshhi.sh.gpg  | tee ${gpgFile::=$(mktemp)} ; gpg --output ${rmFile::=$(mktemp)} --decrypt ${gpgFile} ;  fc -R $rmFile  ; rm -i $rmFile ; mv -i $rmFile $HOME/.zshhi.sh ;
isgo fc -R zshhm.sh ; curl https://raw.githubusercontent.com/DCDC-Melo/home/main/.zshhm.sh.gpg  | tee ${gpgFile::=$(mktemp)} ; gpg --output ${rmFile::=$(mktemp)} --decrypt ${gpgFile} ;  fc -R $rmFile  ; rm -i $rmFile ; mv -i $rmFile $HOME/.zshhm.sh ;

# initialise a standalone store in some throwaway directory
mkdir $HOME/.gopass_store && gopass init --path $HOME/.gopass_store && cd $_
# initialise a git repository, add remote origin and push
git init && git add --all && git commit -m "store creation"
git remote add origin git@github.com:name/repo.git && git push -u origin master
# clone the store from the git repository as a mount
gopass clone git@github.com:name/repo.git store-name
# if successful, find the mounted store, add a secret & list your secrets
gopass mounts
echo "secret-value" | gopass insert store-name/first-secret
gopass list store-name
